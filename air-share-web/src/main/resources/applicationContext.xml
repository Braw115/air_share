<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.2.xsd">

	<!-- 读取database.properties -->
	<context:property-placeholder location="classpath:dev\database.properties"/>

	<!-- 扫描com.air.service -->
	<context:component-scan base-package="com.air.*.service" />
	<!-- 配置数据源 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<!-- 基本属性 url、user、password -->
		<property name="driverClassName" value="${driver}" />
		<property name="url" value="${url}" />
		<property name="username" value="${user}" />
		<property name="password" value="${password}" />
		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="100" />
		<property name="minIdle" value="100" />
		<property name="maxActive" value="100000" />
		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="60000" />
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" />
		<property name="validationQuery" value="SELECT 'x'" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
		<property name="poolPreparedStatements" value="true" />
		<property name="maxPoolPreparedStatementPerConnectionSize"
			value="20" />
		<!-- 配置监控统计拦截的filters，去掉后监控界面sql无法统计 -->
		<property name="filters" value="stat" />
	</bean>
	

	

	<!-- 配置数据工厂 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<property name="mapperLocations">
			<list>
				<value>classpath:mapper/*.xml</value>
			</list>
		</property>
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.air.*.mapper" />
	</bean>
	 <bean id="redisAPI" class="com.air.redis.RedisAPI">
	 	 <property name="jedisPool" ref="jedisPool" />
	 </bean>
	
	 <bean id="validationToken" class="com.air.constant.ValidationToken">
	  <property name="redisAPI" ref="redisAPI" />
	 </bean>
	 
	 <bean id="tokenUtil" class="com.air.constant.TokenUtil">
	 	 <property name="redisApi" ref="redisAPI" />
	 </bean>
	 
	  <bean id="jedisPool" class="redis.clients.jedis.JedisPool"
	  destroy-method="destroy">
	  <constructor-arg ref="jedisPoolConfig" />
	  <constructor-arg value="47.106.211.75" />
	  <constructor-arg value="6379" />
	  <constructor-arg value="60000" />
	 </bean>
	 
	  <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
	  <property name="maxActive" value="3000" />
	  <property name="maxIdle" value="100" />
	  <property name="maxWait" value="1000" />
	  <property name="testOnBorrow" value="true" />
	 </bean>
	 
	 <!-- 开启注解 -->
    <context:annotation-config />
	 <!--  定义事务管理器  -->
	 <bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
    <!-- 支持事务注解 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>
	<!--	定义切面
	<aop:config>
		<aop:pointcut expression="execution(* com.air.*.service..*.*(..))"
			id="serviceMethod" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="serviceMethod" />
	</aop:config>

	<tx:advice id="txAdvice" transaction-manager="txManager"> 配置事务增强
		<tx:attributes>
			<tx:method name="select*" read-only="true" />    查找开启只读,其他开启事务
			<tx:method name="query*" read-only="true" />    查找开启只读,其他开启事务
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="modify*" propagation="REQUIRED" />
			<tx:method name="del*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice> 
	 <tx:annotation-driven transaction-manager="txManager" 
                                       proxy-target-class="true"/> -->
</beans>	